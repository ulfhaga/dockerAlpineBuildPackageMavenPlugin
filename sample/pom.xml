<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>se.docker.alpine</groupId>
    <artifactId>sample</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>sample</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <docker-maven-plugin.version>0.33.0</docker-maven-plugin.version>
    </properties>

    <dependencies>

        <dependency>
            <groupId>se.docker.alpine</groupId>
            <artifactId>server</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
            <plugins>
                <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.7.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>se.docker.alpine</groupId>
                <artifactId>plugin-maven</artifactId>
                <version>1.0-SNAPSHOT</version>
                <configuration>
                    <name>mypackage</name>
                    <source>${project.basedir}/src/test/resources/testData/source</source>
                    <version>1.0</version>
                    <arch>noarch</arch>
                    <license>LGPL-2.1-or-later</license>
                    <url>http://www.github.com</url>
                    <description>testing</description>
                    <target>${project.basedir}/target</target>
                    <packageFunction>![CDATA[install -Dm755 hello.sh "$pkgdir"/usr/bin/hello1.sh]]</packageFunction>
                </configuration>
                <executions>
                    <execution>
                        <id>execution</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker-maven-plugin.version}</version>
                <configuration>
                    <showLogs>true</showLogs>
                    <useColor>true</useColor>
                    <images>
                        <image>
                            <name>server-alpine-jvm</name>
                            <run>
                                <ports>
                                    <port>64014:8080</port>
                                </ports>
                                <wait>
                                    <http>
                                        <url>http://localhost:64014/health/ready</url>
                                        <method>GET</method>
                                        <status>200</status>
                                    </http>
                                    <time>10000</time>
                                    <kill>1000</kill>
                                    <shutdown>500</shutdown>
                                    <healthy>false</healthy>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>package</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>
